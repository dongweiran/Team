{"remainingRequest":"E:\\Team\\team2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\Team\\team2\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Team\\team2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Team\\team2\\src\\views\\Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"E:\\Team\\team2\\src\\views\\Home.vue","mtime":1610699622969},{"path":"E:\\Team\\team2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Team\\team2\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\Team\\team2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Team\\team2\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}