{"remainingRequest":"E:\\Team\\team\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\Team\\team\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Team\\team\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Team\\team\\src\\views\\Shopping.vue?vue&type=template&id=5428e0bc&scoped=true&","dependencies":[{"path":"E:\\Team\\team\\src\\views\\Shopping.vue","mtime":1610432292775},{"path":"E:\\Team\\team\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Team\\team\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\Team\\team\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Team\\team\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}